name: build_image

on:
  workflow_call:
    inputs:
      image_name:
        description: 'Image name (e.g. my-image)'
        required: true
        type: string
    outputs:
      digest:
        value: ${{ jobs.build.outputs.digest }}

permissions:
  contents: read

env:
  GO_VERSION: "1.20.4"
  LINTER_VERSION: v1.52
  # values from terraform output
  PROVIDER_ID: "projects/595203407878/locations/global/workloadIdentityPools/vul-gh/providers/github-provider"
  PROVIDER_EMAIL: "vul-github-sa@s3cme1.iam.gserviceaccount.com"
  REGISTRY_URI: "us-west1-docker.pkg.dev"
  REGISTRY_FOLDER: "s3cme1/vul"

jobs:
  build:
    outputs:
      digest: ${{ steps.image.outputs.digest }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:

    - name: Setup Go
      uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe  # v4.1.0
      with:
        go-version: '${{ env.GO_VERSION }}'

    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Checkout Code
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab  # v3.5.2

    - name: Tidy Modules
      run: |
        go mod tidy
        go mod vendor

    - name: Get Version
      run: |
        set -euo pipefail
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - id: auth
      name: Get GCP token
      uses: google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033  # v1.1.1
      with:
        token_format: "access_token"
        workload_identity_provider: ${{ env.PROVIDER_ID }}
        service_account: ${{ env.PROVIDER_EMAIL }}

    - name: Install ko
      uses: ko-build/setup-ko@ace48d793556083a76f1e3e6068850c1f4a369aa  # v0.6

    - name: Authenticate ko
      env:
        AUTH_TOKEN: ${{ steps.auth.outputs.access_token }}
      run: |
        echo "${AUTH_TOKEN}" | ko login ${{ env.REGISTRY_URI }} --username oauth2accesstoken --password-stdin

    - name: Auto Minify
      uses: nizarmah/auto-minify@7028a7a4b79ccdc7e00f351baed61c59d07690ee  # 2.1.1
      with:
        overwrite: true

    # Note: ko build image ref will include BOTH, the tag AND digest of the image.
    - name: Build Image
      id: image
      env:
        KO_DOCKER_REPO: ${{ env.REGISTRY_URI }}/${{ env.REGISTRY_FOLDER }}/${{ inputs.image_name }}
        GOFLAGS: "-ldflags=-X=main.version=${{ env.RELEASE_VERSION }}"
        COSIGN_EXPERIMENTAL: "true"
      run: |
        ko build internal/cmd/${{ inputs.image_name }}/main.go --image-refs .digest --bare --tags ${{ env.RELEASE_VERSION }}
        echo "digest=$(cat .digest)" >> "$GITHUB_OUTPUT"
