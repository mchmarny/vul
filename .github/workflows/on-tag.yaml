name: on_tag
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'  # Only build tag with semantic versioning format

permissions:
  contents: read

env:
  GO_VERSION: "1.20.4"
  LINTER_VERSION: v1.52
  PROVIDER_ID: "projects/595203407878/locations/global/workloadIdentityPools/vul-gh/providers/github-provider"
  REGISTRY: "us-west1-docker.pkg.dev"
  REG_FOLDER: "s3cme1/vul"
  SA_EMAIL: "vul-github-actions-user@s3cme1.iam.gserviceaccount.com"

jobs:
  build-app:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:

    - name: Setup Go
      uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753  # v4.0.1
      with:
        go-version: '${{ env.GO_VERSION }}'

    - run: go version

    - name: Cache Go Modules
      uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8  # v3.3.1
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Checkout Code
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab  # v3.5.2

    - name: Tidy Modules
      run: |
        go mod tidy
        go mod vendor

    - name: Get Version
      run: |
        set -euo pipefail
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - id: auth
      name: Get GCP token
      uses: google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033  # v1.1.1
      with:
        token_format: "access_token"
        workload_identity_provider: ${{ env.PROVIDER_ID }}
        service_account: ${{ env.SA_EMAIL }}

    - name: Install ko
      uses: ko-build/setup-ko@ace48d793556083a76f1e3e6068850c1f4a369aa  # v0.6

    - name: Authenticate ko
      env:
        AUTH_TOKEN: ${{ steps.auth.outputs.access_token }}
      run: |
        echo "${AUTH_TOKEN}" | ko login ${{ env.REGISTRY }} --username oauth2accesstoken --password-stdin

    - name: Auto Minify
      uses: nizarmah/auto-minify@7028a7a4b79ccdc7e00f351baed61c59d07690ee  # 2.1.1
      with:
        overwrite: true

    # Note: ko build image ref will include BOTH, the tag AND digest of the image.
    - name: Build Image
      id: image
      env:
        KO_DOCKER_REPO: ${{ env.REGISTRY }}/${{ env.REG_FOLDER }}/app
        GOFLAGS: "-ldflags=-X=main.version=${{ env.RELEASE_VERSION }}"
        COSIGN_EXPERIMENTAL: "true"
      run: |
        ko build internal/cmd/app/main.go --image-refs .digest --bare --tags ${{ env.RELEASE_VERSION }}
        echo "digest=$(cat .digest)" >> "$GITHUB_OUTPUT"


  build-worker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:

    - name: Setup Go
      uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753  # v4.0.1
      with:
        go-version: '${{ env.GO_VERSION }}'

    - run: go version

    - name: Cache Go Modules
      uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8  # v3.3.1
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Checkout Code
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab  # v3.5.2

    - name: Tidy Modules
      run: |
        go mod tidy
        go mod vendor

    - name: Get Version
      run: |
        set -euo pipefail
        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - id: auth
      name: Get GCP token
      uses: google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033  # v1.1.1
      with:
        token_format: "access_token"
        workload_identity_provider: ${{ env.PROVIDER_ID }}
        service_account: ${{ env.SA_EMAIL }}

    - name: Define Metadata
      id: meta
      uses: docker/metadata-action@c4ee3adeed93b1fa6a762f209fb01608c1a22f1e  # v4.4.0
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.REG_FOLDER }}/worker
        tags: |
          type=raw,enable=true,value=${{ env.RELEASE_VERSION }}
          type=raw,enable=true,value=${{ env.GITHUB_SHA }}

    - name: Registry Auth
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a  # v2.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    - name: Image Push
      id: push
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671  # v4.0.0
      with:
        file: internal/cmd/worker/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        args: |
          --build-arg VERSION=${{ env.RELEASE_VERSION }}

    - name: Export Digest
      run: |
        echo "IMAGE_DIGEST=${{ env.REGISTRY }}/${{ env.REG_FOLDER }}/worker@${{ steps.push.outputs.digest }}" >> $GITHUB_ENV
